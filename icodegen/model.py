# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_model.ipynb (unless otherwise specified).

__all__ = ['Model', 'TransformerModel', 'GRUModel']

# Cell
import tensorflow as tf

from abc import ABC, abstractmethod

# Cell
class Model(ABC):
    def __init__(self, tokenizer, model):
        self.tokenizer = tokenizer
        self.model = model

    @abstractmethod
    def get_probs(self, method):
        pass

# Cell

# Tensorflow Huggingface Transformer
class TransformerModel(Model):
    def get_probs(self, method):
        inputs = self.tokenizer("Hello, my dog is cute", return_tensors="tf")
        outputs = self.model(inputs)
        logits = outputs[0]
        probs = tf.nn.softmax(logits)

        return probs

# Tensorflow GRU Model
class GRUModel(Model):
    def get_probs(self, method):
        pass